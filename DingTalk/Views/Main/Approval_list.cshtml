@{
    Layout = null;
}

<!--右侧实体内容-->
<div id="partPage">
    <!--查詢表單-->
    @*<el-form :inline="true" :model="formInline" class="demo-form-inline"
             size="medium">
        <el-form-item label="关键字">
            <el-input v-model="formInline.user" style="width:500px;"
                      placeholder="请输入搜索关键字，包括审批标题、正文内容、审批意见"></el-input>
        </el-form-item>
        
        <template v-if="superSearch">
            <el-form-item label="发起日期（提交审批日期）">
                <el-date-picker v-model="formInline.startDate"
                                type="daterange"
                                :picker-options="pickerOptions"
                                range-separator="至"
                                start-placeholder="开始日期"
                                end-placeholder="结束日期">
                </el-date-picker>
            </el-form-item>
            <el-form-item label="完成日期（最终审批日期）">
                <el-date-picker v-model="formInline.endDate"
                                type="daterange"
                                :picker-options="pickerOptions"
                                range-separator="至"
                                start-placeholder="开始日期"
                                end-placeholder="结束日期">
                </el-date-picker>
            </el-form-item>
        </template>

        <el-form-item>
            <el-button type="primary" v-on:click="onFilter">搜索</el-button>
            <span v-if="superSearch" v-on:click="changeSuperSearch" class="clickable-text">关闭高级搜索</span>
            <span v-else v-on:click="changeSuperSearch" class="clickable-text">高级搜索</span>
        </el-form-item>
        
        <el-form-item label="审批类型">
            <el-select v-model="formInline.region">
                <el-option label="全部" value=""></el-option>
                <el-option label="办公用品申领" value="1"></el-option>
                <el-option label="用车申请" value="2"></el-option>
            </el-select>
        </el-form-item>
    </el-form>*@
    <!--表格實體-->
    <el-table :data="tableData" stripe border>
        <el-table-column prop="TaskId" label="流水号"></el-table-column>
        <el-table-column prop="FlowName" label="审批类型"></el-table-column>
        <el-table-column prop="Title" label="标题"></el-table-column>
        <el-table-column prop="ApplyMan" label="申请人"></el-table-column>
        <el-table-column prop="ApplyTime" label="申请时间"></el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <el-button size="mini" v-on:click="handleEdit(scope.$index, scope.row)">详情</el-button>
                @*<el-button size="mini" type="danger" v-on:click="handleDelete(scope.$index, scope.row)">同意</el-button>*@
            </template>
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="5"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>
</div>


<script>
    var Index = 0
    new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                data: [],
                tableData: [],
                currentPage: 1,
                totalRows: 0,
                superSearch: false,
                formInline: {
                    user: '',
                    region: '',
                    startDate: '',
                    endDate: '',
                    state:0
                },
                items: { TaskId: '审批编号' ,ApplyMan:'审批人'}
            }
        },
        methods: {
            //查詢相關頁面
            onFilter() {
                console.log(this.formInline)
            },
            //切换高级搜索
            changeSuperSearch() {
                this.superSearch = !this.superSearch;
            },
            //获取审批列表
            getApproveList() {
                var that = this 
                $.ajax({
                    url: 'FlowInfo/GetFlowStateDetail?Index=' + Index + '&ApplyManId=' + DingData.userid,
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        console.log('FlowInfo/GetFlowStateDetail?Index=' + Index + '&ApplyManId=' + DingData.userid)
                        console.log(data)
                        for (let d of data) {
                            that.data.push(d[0])
                        }
                        //that.tableData = data
                        that.getData()
                        that.totalRows = data.length
                    },
                    error: function (err) {
                        console.error(err)
                    }
                })
            },
            //表单操作
            handleEdit(index, row) {
                console.log(index, row);
                var that = this
                if (Index == '3') {
                    var url = '/FlowInfo/ChangeSendState?TaskId=' + row.TaskId + '&UserId=' + DingData.userid
                    $.ajax({
                        url: url, 
                        success: function (data) {
                            console.log('设置抄送审批为已读')
                            console.log(url)
                            console.log(data)
                            that.loadPage(row)
                        }
                    })
                } else {
                    this.loadPage(row)
                }
            },
            loadPage(row) {
                if (row.TaskId && row.FlowId) {
                    if (row.FlowId == 7) {
                        loadPage('/Main/approval_detail2?taskid=' + row.TaskId + '&flowid=' + row.FlowId + '&nodeid=' + row.NodeId + '&id=' + row.Id + '&index=' + Index)
                        return
                    }
                    loadPage('/Main/approval_detail?taskid=' + row.TaskId + '&flowid=' + row.FlowId + '&nodeid=' + row.NodeId + '&id=' + row.Id + '&index=' + Index)
                }
            },
            handleDelete(index, row) {
                console.log(index, row);
            }
        },
        created: function () {
            console.log('UrlObj')
            console.log(UrlObj)
            Index = UrlObj.Index
            this.getApproveList()
            loadHtml("mainPage", "partPage")
        }
    })


</script>