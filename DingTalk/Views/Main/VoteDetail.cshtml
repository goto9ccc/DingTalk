@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="~/Content/element.css" />
    <link rel="stylesheet" href="~/Content/display.css" />
    <link rel="stylesheet" href="~/Content/site.css" />
    <script src="~/Scripts/jquery-1.11.0.js"></script>
    <script src="~/Scripts/vue.js"></script>
    <script src="~/Scripts/element.js"></script>
    <script src="~/Scripts/lib.js"></script>
    <script src="https://g.alicdn.com/dingding/dingtalk-pc-api/2.7.0/index.js"></script>
    @*<script src="http://g.alicdn.com/dingding/dingtalk-jsapi/2.0.57/dingtalk.open.js"></script>*@
    <script>
        var DingData = {}
    </script>
    <style>
        .text {
            font-size: 14px;
        }

        .item {
            margin-bottom: 18px;
        }

        .clearfix:before,
        .clearfix:after {
            display: table;
            content: "";
        }

        .clearfix:after {
            clear: both
        }

        .box-card {
            margin: 0 auto;
            width: 100%;
        }
    </style>
</head>
<body>
    <div id="partPage">
        <el-card class="box-card">
            <div slot="header" class="clearfix">
                <p style="font-size:1.5rem;">{{ruleForm.Title}}</p>
            </div>
            <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="80px" class="demo-ruleForm">
                <el-form-item label="发起人">
                    <el-input v-model="ruleForm.ApplyMan" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="开始时间">
                    <el-input v-model="ruleForm.StartTime" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="结束时间">
                    <el-input v-model="ruleForm.EndTime" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="投票结果" v-if="voted" style="margin-left:0px;">
                    <p style="font-size:24px;text-align:center;margin:0px;">总票数 : <span style="color:red;font-size:26px;">{{total}}</span> 票</p>
                    <div v-for="(o,i) in options" :key="o.name" class="text item" style="margin-left:-80px;">
                        <p style="width:20%;display:inline-block;font-size:24px;text-align:center;margin:0px;">{{o.name }}</p>
                        <el-progress style="width:60%;display:inline-block;" :text-inside="true" :stroke-width="18" :status="status[i]" :percentage="o.rate"></el-progress>
                        <p style="width:10%;color:red;font-size:24px;display:inline-block;text-align:center;margin:0px;">{{o.count}}</p>
                    </div>
                </el-form-item>
                <el-form-item label="投票选项" v-else>
                    <el-radio-group v-model="chooseValue">
                        <el-radio v-for="o in options" :key="o.name" :label="o.name">{{o.name}}</el-radio>
                    </el-radio-group>
                    <el-button type="primary" v-on:click="postVoteData('ruleForm')">投票</el-button>
                </el-form-item>
                <el-form-item>
                    
                </el-form-item>
            </el-form>
            
        </el-card>

    </div>

</body>
</html>
<script>


 
</script>

<script>
    //登录钉钉
    var code = ''
    DingData.userid = 'manager325'
    DingData.nickName = '黄浩炜'
    $.ajax({
        //url: 'http://17e245o364.imwork.net/signature/',
        url: '/Login/BeginDDAutoLogin',
        dataType: 'json',
        type: 'GET',
        cache: false,
        success: function (data) {
            DingData = data
            DingData.userid = 'manager325'
            DingData.nickName = '黄浩炜'
            console.log(data)
            console.log("你好，" + DingData.nickName)
            var configObj = {
                agentId: DingData.AgentId,
                corpId: DingData.CorpId,
                timeStamp: DingData.TimeStamp,
                nonceStr: DingData.NonceStr,
                signature: DingData.Signature,

                jsticket: DingData.JsApiTicket,
                jsApiList: [
                    'runtime.info',
                    'biz.contact.choose',
                    'device.notification.alert',
                    'device.notification.confirm',
                    'biz.user.get']
            }
            //console.log(configObj)
            dd.config(configObj);
        },
        error: function (err) {
            console.error(err)
        }
    })
    //手机版接口
    dd.ready(function () {
        //dd.device.notification.confirm({
        //    message: "你爱我吗",
        //    title: "提示",
        //    buttonLabels: ['爱', '不爱'],
        //    onSuccess: function (result) {
            
        //    },
        //    onFail: function (err) { }
        //});
        // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。
        dd.runtime.permission.requestAuthCode({
            corpId: DingData.CorpId,
            onSuccess: function (result) {
                dd.device.notification.confirm({
                    message: JSON.stringify(result),
                    title: JSON.stringify(result),
                    buttonLabels: ['爱', '不爱'],
                    onSuccess: function (result) {
                   
                    },
                    onFail: function (err) { }
                });
                code = result.code
            },
            onFail: function (err) { }

        });
    });
    dd.error(function (error) {
        alert('dd error: ' + JSON.stringify(err));
    });
</script>

<script>
    var id = ''
    var options = []
    var counts = []
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                ruleForm: {
                    ApplyMan: '',
                    ApplyManId: '',
                    Title: '',
                    Option: '',
                    StartTime: '',
                    EndTime: '',
                    VoteCount: '',
                    SubmitterId: ''
                },
                chooseValue: '',
                voted: false,
                options: [],
                total: 0,
                status: ['', 'Success', 'Warning','Danger']
            }
        },
        methods: {
            getVoteData(callback) {
                var that = this
                var url = '/VoteManager/QuaryVote?Id=3'
                //var url = '/VoteManager/QuaryVote?Id=' + id
                this._getData(url, function (data) {
                    data.StartTime = data.StartTime.replace('T', ' ')
                    data.EndTime = data.EndTime.replace('T', ' ')
                    that.ruleForm = data
                    var submitters = data.SubmitterId.split(',')
                    for (let s of submitters) {
                        if (DingData.userid == s)
                            that.voted = true
                    }
                    options = data.Option.split(',')
                    counts = data.VoteCount.split(',')
                    that.options = []
                    that.total = 0
                    for (let c of counts) { that.total += parseInt(c) }
                    for (let i = 0; i < options.length; i++) {
                        that.options.push({
                            name: options[i],
                            count: counts[i],
                            rate: (counts[i] / that.total)*100
                        })
                    }
                    callback()
                })
            },
            postVoteData() {
                if (!this.chooseValue) return
                var that = this
                var url = '/VoteManager/ChangeVote'
                

                this.getVoteData(function () {
                    let index = 0
                    for (var i = 0; i < options.length; i++) {
                        if (options[i] == that.chooseValue)
                            index = i
                    }
                    counts[index] = parseInt(counts[index]) + 1 + ''
                    that.ruleForm.VoteCount = counts.join(',')
                    that.options = []
                    that.total = 0
                    for (let c of counts) { that.total += parseInt(c) }
                    for (let i = 0; i < options.length; i++) {
                        that.options.push({
                            name: options[i],
                            count: counts[i],
                            rate: (counts[i] / that.total) * 100
                        })
                    }

                    var param = _cloneObj(that.ruleForm)
                    param.SubmitterId = param.SubmitterId + ',' + DingData.userid
                    
                    console.log('更新投票数据')
                    console.log(param)
                    that._postData(url, function (data) {
                        that.$alert('恭喜提交成功', '提示信息', {
                            confirmButtonText: '确定',
                            callback: action => {
                                that.voted = true
                            }
                        })
                    }, param)
                })
                
            }
        },
        created: function () {
            var myurl = location.search
            var urlObj = {}
            var param = myurl.split('?')[1]
            if (param) {
                var paramArr = param.split('&')
                for (let p of paramArr) {
                    urlObj[p.split('=')[0]] = p.split('=')[1]
                }
            }
            id = urlObj.id
            this.getVoteData(function () { })
        }
    })
</script>

