@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        下发图纸
    </div>

    <h5>选择项目</h5>
    <!--表格實體-->
    <el-table :data="projectTable" stripe border>
        <el-table-column v-for="(value,key) in projectItems" :prop="key" :label="value" :key="key">
        </el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <el-button v-on:click.native.prevent="selectProject(scope.$index, projectTable)"
                           type="text" size="small">选择项目
                </el-button>
            </template>
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="5"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>

    <el-table :data="parts"
              style="width: 100%">
        <el-table-column type="expand">
            <template slot-scope="props">
                <el-collapse accordion>
                    <el-collapse-item v-for="flows in props.row.children" :key="flows.id">
                        <template slot="title">
                            <span>工序名称：</span>
                            <el-button type="primary" plain size="mini">{{flows.label}}</el-button>
                            <el-button size="mini" v-on:click="deleteFlow()" type="danger" class="tableRight">删除流程</el-button>
                            <el-button size="mini" v-on:click="deleteFlow()" class="tableRight">添加工作</el-button>
                        </template>
                        <el-form v-for="flow in flows.children" :key="flow.id" :inline="true" class="demo-form-inline form" size="mini">
                            <el-form-item label="执行人">
                                <el-input v-model="flow.label" :placeholder="flow.label" style="width:100px;"></el-input>
                            </el-form-item>
                            <el-form-item label="开始日期">
                                <el-date-picker v-model="flow.id"
                                                type="daterange"
                                                :picker-options="pickerOptions"
                                                range-separator="至"
                                                start-placeholder="开始日期"
                                                end-placeholder="结束日期">
                                </el-date-picker>
                            </el-form-item>
                            <el-form-item>
                                <el-button type="danger" v-on:click="deleteWork">删除工作</el-button>
                            </el-form-item>
                        </el-form>
                    </el-collapse-item>
                </el-collapse>
            </template>
        </el-table-column>
        <el-table-column label="零件编号"
                         prop="id">
        </el-table-column>
        <el-table-column label="零件名称"
                         prop="label">
        </el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <el-button size="mini"
                           v-on:click="addFlow(scope.$index, scope.row)">添加流程</el-button>
            </template>
        </el-table-column>
    </el-table>

    <div>
        <el-button style="margin:40px 0 0 40%" type="primary"
                   v-on:click="addFlow">确定下发</el-button>
    </div>

</el-main>

<script>
    let itemId = 1000
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                data: [],
                projectTable: [],
                projectItems: {
                    ProjectName: '项目名称',
                    ApplyMan: '创建人',
                    CreateTime: '创建时间',
                    DeptName: '所属部门'
                },
                totalRows: 0,
                project: '',
                parts: [{
                    id: 1,
                    label: '一级 1',
                    children: [{
                        id: 4,
                        label: '二级 1-1',
                        children: [{
                            id: 9,
                            label: '三级 1-1-1'
                        }, {
                            id: 10,
                            label: '三级 1-1-2'
                        }]
                    }]
                }, {
                    id: 2,
                    label: '一级 2',
                    children: [{
                        id: 5,
                        label: '二级 2-1'
                    }, {
                        id: 6,
                        label: '二级 2-2'
                    }]
                }, {
                    id: 3,
                    label: '一级 3',
                    children: [{
                        id: 7,
                        label: '二级 3-1'
                    }, {
                        id: 8,
                        label: '二级 3-2'
                    }]
                }],
                ruleForm: {
                    name: '',
                    reson: '',
                }
            }
        },
        methods: {
            onSubmit() {
                console.log('submit!');
            },
            selectProject(project) {

            },
            addFlow(index,row){

            },
            deleteFlow() {
                
            },
            addWork() {

            },
            deleteWork() {

            },
            getProject() {
                var that = this
                $.ajax({
                    url: "/Project/GetAllProJect",
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        console.log("获取项目列表")
                        console.log(data)
                        that.data = data
                    },
                    error: function (err) {
                        console.log(err);
                    }
                })
            },
            selectProject(index, data) {

            }
        },
        created: function () {
            this.getProject()
            loadHtml("mainPage", "partPage")
        }
    })


</script>



