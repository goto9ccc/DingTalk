@{
    Layout = null;
}

<!--右侧实体内容-->
<div id="partPage">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        添加项目
    </div>
    <!--创建项目表单-->
    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm"
             enctype="multipart/form-data">
        <template>
            <el-form-item label="项目名称" prop="inputProjectName" style="width:300px;">
                <el-input v-model="ruleForm.inputProjectName"></el-input>
            </el-form-item>
            <el-form-item label="项目编号" prop="inputProjectId" style="width:300px;">
                <el-input v-model="ruleForm.inputProjectId"></el-input>
            </el-form-item>
            <el-form-item label="部门名称" style="width:300px;">
                <el-input v-model="ruleForm.DeptName"></el-input>
            </el-form-item>
            <el-form-item label="状态" required="required">
                <el-select v-model="ruleForm.ProjectState">
                    <el-option v-for="s of status" :label="s" :value="s" key="s"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="公司名称" required="required">
                <el-select v-model="ruleForm.CompanyName">
                    <el-option v-for="s of CompanyNames" :label="s" :value="s" key="s"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="项目类型" required="required">
                <el-select v-model="ruleForm.ProjectType">
                    <el-option v-for="s of ProjectTypes" :label="s" :value="s" key="s"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="项目负责人" required="required">
                <span>{{ResponsibleMan[0].name}} &nbsp;</span>
                <el-button class="button-new-tag" size="small" v-on:click="addMan">+ 选择</el-button>
            </el-form-item>
            <el-form-item label="项目组成员" required="required">
                <span v-for="p in groupPeople">{{p.name}} &nbsp;</span>
                <el-button class="button-new-tag" size="small" v-on:click="addGroup">+ 选择</el-button>
            </el-form-item>
            <el-form-item label="项目周期" required="required">
                <el-date-picker v-model="ruleForm.Time"
                                type="daterange"
                                :picker-options="pickerOptions"
                                range-separator="至"
                                start-placeholder="开始日期"
                                end-placeholder="结束日期">
                </el-date-picker>
            </el-form-item>
            <el-form-item>
                <el-button type="primary" v-on:click="addProject">添加</el-button>
            </el-form-item>
        </template>
    </el-form>
</div>


<script>
    var Index = 0
    var ProjectTypes = ['自研项目', '纵向项目', '横向项目']
    var CompanyNames = ['泉州华中科技大学智能制造研究院', '泉州华数机器人有限公司']
    var VUE = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                status: ['在研', '已完成', '终止'],
                ResponsibleMan: [{ name: '', emplId: '' }],
                groupPeople: [{ name: '', emplId: '' }],
                ProjectTypes: ProjectTypes,
                CompanyNames: CompanyNames,
                ruleForm: {
                    inputProjectName: '',
                    inputProjectId: '',
                    DeptName: '',
                    ProjectState: '',
                    ProjectName: '',
                    ProjectId: null,
                    Time: '',
                    ProjectType: ProjectTypes[0],
                    CompanyName: CompanyNames[0]
                }
            }
        },
        methods: {
            //添加项目
            addProject() {
                var that = this
                this.$refs['ruleForm'].validate((valid) => {
                    if (valid && this.ResponsibleMan[0].name && this.ruleForm.ProjectState && this.groupPeople[0].name && this.ruleForm.Time[0]) {
                        let names = []
                        let ids = []
                        for (let p of this.groupPeople) {
                            names.push(p.name)
                            ids.push(p.emplId)
                        }
                        var param = {
                            "ProjectName": this.ruleForm.inputProjectName,
                            "CreateTime": _getTime(),
                            "IsEnable": true,
                            "ProjectState": this.ruleForm.ProjectState,
                            "IsFinish": false,
                            "DeptName": this.ruleForm.DeptName,
                            "ApplyMan": DingData.nickName,
                            "ApplyManId": DingData.userid,
                            "StartTime": this.ruleForm.Time[0]?_dateToString(this.ruleForm.Time[0]):'',
                            "EndTime": this.ruleForm.Time[1]?_dateToString(this.ruleForm.Time[1]):'',
                            "ProjectId": this.ruleForm.inputProjectId,
                            "ResponsibleMan": this.ResponsibleMan[0].name,
                            "ResponsibleManId": this.ResponsibleMan[0].emplId,
                            "TeamMembers": names.join(','),
                            "TeamMembersId": ids.join(','),
                            "CompanyName": this.ruleForm.CompanyName,
                            "ProjectType": this.ruleForm.ProjectType,
                            "CreateManId": DingData.userid,
                            "CreateMan": DingData.nickName
                        }
                        console.log(param)
                        $.ajax({
                            url: "/Project/AddProject",
                            type: "POST",
                            dataType: "json",
                            async: false,
                            data: JSON.stringify(param),
                            success: function (data) {
                                console.log("添加项目")
                                console.log(data)
                                if (data.errorCode == 0) {
                                    that.$alert(data.errorMessage, '提示信息', {
                                        confirmButtonText: '确定',
                                        callback: action => {
                                            return
                                        }
                                    });
                                }
                                that.$alert(data.errorMessage, '提示信息', {
                                    confirmButtonText: '确定'
                                })
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                console.log(XMLHttpRequest.status);
                            }
                        })
                    }
                    else {
                        that.$alert('表单信息不全或有误', '提示信息', {
                            confirmButtonText: '确定'
                        })
                    }
                })
                
            },
            addMan() {
                var that = this
                DingTalkPC.biz.contact.choose({
                    multiple: false, //是否多选： true多选 false单选； 默认true
                    users: [], //默认选中的用户列表，员工userid；成功回调中应包含该信息
                    corpId: DingData.CorpId, //企业id
                    onSuccess: function (data) {
                        that.ResponsibleMan = data
                        console.log(data)
                    },
                    onFail: function (err) { }
                });
            },
            addGroup() {
                var that = this
                console.log('addGroup')
                DingTalkPC.biz.contact.choose({
                    multiple: true, //是否多选： true多选 false单选； 默认true
                    users: [], //默认选中的用户列表，员工userid；成功回调中应包含该信息
                    corpId: DingData.CorpId, //企业id
                    onSuccess: function (data) {
                        that.groupPeople = data
                        console.log(data)
                    },
                    onFail: function (err) { }
                });
            }
        },
        created: function () {
            loadHtml("mainPage", "partPage")
        }
    })


</script>