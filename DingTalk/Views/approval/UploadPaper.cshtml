@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        上传图纸-{{nodeInfo.NodeName}}
    </div>
    <!--表格實體-->
    <el-table :data="tableData" stripe border>
        <el-table-column v-for="(value,key) in items" :prop="key" :label="value">
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="5"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>
    <!--上传表單-->
    <el-upload class="upload-demo"
                action="/drawingupload/UploadAndGetInfo"
                :on-success="handleSuccess"
                :before-remove="beforeRemove"
                multiple
                :limit="3"
                :on-exceed="handleExceed"
                :file-list="fileList">
        <el-button size="small" type="primary">点击上传</el-button>
        <div slot="tip" class="el-upload__tip">只能上传excel文件，且不超过500kb</div>
    </el-upload>

    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">
        <el-form-item label="申请人" prop="name">
            <el-input v-model="ruleForm.name"></el-input>
        </el-form-item>
        <el-form-item label="意见" prop="remark">
            <el-input v-model="ruleForm.remark"></el-input>
        </el-form-item>
        <!--添加审批人-->
        <sam-addapprover :preset="preset" :approvers="ruleForm.approvers" :type="'approve'">
        </sam-addapprover>
        <!--添加抄送人-->
        <sam-addapprover :preset="preset" :approvers="ruleForm.copyers">
        </sam-addapprover>
        <el-form-item>
            <el-button type="primary" v-on:click="onSubmit('ruleForm')">提交</el-button>
            <el-button v-on:click="resetForm('ruleForm')">重置</el-button>
        </el-form-item>
    </el-form>
</el-main>

<script>
    var flowId = 6
    var nodeId = 1
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                ruleForm: {
                    name: '',
                    remark: '',
                    approvers: ['小唐', '院长'],
                    copyers: ['小唐', '季老师']
                },
                preset: true,
                fileList: [],
                data: [],
                items: [],
                tableData: [],
                totalRows: 0,
                nodeInfo: {}
            }
        },
        methods: {
            //提交审批
            onSubmit(formName) {
                var that = this
                this.$refs[formName].validate((valid) => {
                    if (valid && this.data.length > 0) {
                        var paramObj = {
                            "ApplyMan": that.ruleForm.name,
                            "NodeId": "0",
                            "ApplyTime": _getTime(),
                            "IsEnable": "1",
                            "FlowId": FlowId+'',
                            "Remark": that.ruleForm.remark
                        }
                        console.log(paramObj)
                        $.ajax({
                            url: '/FlowInfo/CreateTaskInfo',
                            type: 'POST',
                            data: JSON.stringify(paramObj),
                            success: function (data) {
                                console.log("提交审批ok")
                                that.bindData(JSON.parse(data).Content)
                                that.bindApprover(JSON.parse(data).Content)
                            }
                        })
                    } else {
                        alert('表单数据不全或有误')
                        console.log('error submit!!');
                        return false;
                    }
                });
            },
            //审批绑定BOM表数据
            bindData(taskId) {
                for (let d of this.data) {
                    d.TaskId = taskId
                }
                console.log(this.data)
                var that = this
                $.ajax({
                    url: "/DrawingUpload/LoadPurchase",
                    type: "POST",
                    dataType: "json",
                    async: false,
                    data: JSON.stringify(that.data),
                    success: function (data) {
                        console.log(data);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(XMLHttpRequest.status);
                    }
                })
            },
            //审批绑定审批人
            bindApprover(taskId) {
                var that = this
                var peopleList = []
                for (let a of this.ruleForm.approvers) {
                    peopleList.push({
                        OldTaskId: taskId,
                        FlowId: FlowId,
                        NodeId: nodeId,
                        ApplyMan: a,
                        IsSend: "true",
                        IsEnable: "1",
                        State: "0"
                    })
                }
                for (let c of this.ruleForm.copyers) {
                    peopleList.push({
                        OldTaskId: taskId,
                        FlowId: FlowId,
                        NodeId: nodeId,
                        ApplyMan: c,
                        IsSend: "false",
                        IsEnable: "1",
                        State: "0"
                    })
                }
                console.log("peopleList")
                console.log(peopleList)
                $.ajax({
                    url: "/FlowInfo/ChoseOrSend",
                    type: "POST",
                    dataType: "json",
                    async: false,
                    data: JSON.stringify(peopleList),
                    success: function (data) {
                        console.log("审批绑定审批人ok")
                        console.log(data);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(XMLHttpRequest.status);
                    }
                })
            },
            //上传文件方法
            handleSuccess(response, file, fileList) {
                if (!(response && response.length > 0)) return
                for (let i = 0; i < response.length; i++) {
                    let data = response[i]
                    if (i == 0) {
                        this.items = {}
                        for (let c in data) {
                            if (c.substring(0, 6) == 'Column') {
                                this.items[c] = data[c]
                            }
                        }
                    } else {
                        if (data['Column1'] && data['Column1'] != "")
                            this.data.push(data)
                    }
                }
                this.totalRows = this.data.length
                this.getData()
            },
            getData() {
                var start = this.pageSize * (this.currentPage - 1)
                this.tableData = this.data.slice(start, start + this.pageSize)
            },
            handleExceed(files, fileList) {
                this.$message.warning(`当前限制选择 3 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);
            },
            beforeRemove(file, fileList) {
                return this.$confirm(`确定移除 ${file.name}？`);
            },
            //获取审批申请数据
            getNodeInfo() {
                var that = this
                $.ajax({
                    url: "/FlowInfo/GetNodeInfo?NodeId=0&FlowId=" + FlowId,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        console.log("获取审批申请数据ok")
                        console.log(data);
                        that.nodeInfo = data[0]
                        that.preset = !data[0].IsNeedChose
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(XMLHttpRequest.status);
                    }
                })
            }
        },
        created: function () {
            this.getNodeInfo()
            loadHtml("mainPage", "partPage")
        }
    })
</script>

<style>
    .upload-demo{
        width:400px;
    }
</style>

