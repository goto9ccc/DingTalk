@{
    Layout = null;
}

<!--右侧实体内容-->

<el-main id="partPage" style="position:relative;margin-left:1%;">
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        上传图纸-{{nodeInfo.NodeName}}
    </div>
    <!--表格實體-->
    <el-table :data="tableData" stripe border>
        <el-table-column v-for="(value,key) in items" :prop="key" :label="value" :key="key">
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="5"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>
    <!--上传表單-->
    @*<el-form-item label="上传excel">*@
        <el-upload class="upload-demo"
                   action="/drawingupload/UploadAndGetInfo"
                   :on-success="handleSuccess"
                   :before-remove="beforeRemove"
                   multiple
                   :limit="3"
                   :on-exceed="handleExceed"
                   :file-list="fileList">
            <el-button size="small" type="primary">点击上传</el-button>
            <div slot="tip" class="el-upload__tip">只能上传excel文件，且不超过500kb</div>
        </el-upload>
    @*</el-form-item>*@
        <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm"
                 id="uploadForm" enctype="multipart/form-data">
            <el-form-item label="项目名" prop="ProjectId">
                <el-select v-model="ruleForm.ProjectId" placeholder="请选择">
                    <el-option v-for="item in projestList"
                               :key="item.ProjectId"
                               :label="item.ProjectName"
                               :value="item.ProjectId">
                        <span style="float: left">{{ item.ProjectName }}</span>
                        <span style="float: right; color: #8492a6; font-size: 13px"></span>
                    </el-option>
                </el-select>
                <el-button class="button-new-tag" size="small" v-on:click="showAddProject = true">+ 添加项目</el-button>
            <el-button v-show="showAddProject" class="button-new-tag" size="small" v-on:click="showAddProject = false">隐藏</el-button>
            </el-form-item>

            <template v-if="showAddProject">
                <el-form-item label="项目名称" prop="inputProjectName">
                    <el-input v-model="ruleForm.inputProjectName"></el-input>
                </el-form-item>
                <el-form-item label="项目编号" prop="inputProjectId">
                    <el-input v-model="ruleForm.inputProjectId"></el-input>
                </el-form-item>
                <el-form-item label="开始日期">
                    <el-date-picker v-model="ruleForm.Time"
                                    type="daterange"
                                    :picker-options="pickerOptions"
                                    range-separator="至"
                                    start-placeholder="开始日期"
                                    end-placeholder="结束日期">
                    </el-date-picker>
                </el-form-item>
                <el-form-item>
                    <el-button type="primary" v-on:click="addProject">添加</el-button>
                </el-form-item>
            </template>

            <el-form-item label="申请人" prop="name">
                <el-input v-model="ruleForm.name" :disabled="true"></el-input>
            </el-form-item>
            <el-form-item label="意见" prop="remark">
                <el-input v-model="ruleForm.remark"></el-input>
            </el-form-item>

            <el-form-item label="上传图片">
                <el-upload action="/drawingupload/Upload"
                           list-type="picture-card"
                           :file-list="imageList"
                           :on-preview="handlePictureCardPreview"
                           :on-remove="handlePictureRemove"
                           :on-success="handlePictureCardSuccess"
                           :before-upload="beforePictureUpload">
                    <i class="el-icon-plus"></i>
                </el-upload>
                <el-dialog :visible.sync="dialogVisible">
                    <img width="100%" :src="dialogImageUrl" alt="">
                </el-dialog>
            </el-form-item>
            <el-form-item label="上传PDF" required="required">
                <el-upload class="upload-demo"
                           drag
                           :file-list="pdfList"
                           action="/drawingupload/Upload?path=hello"
                           :on-remove="handleFileRemove"
                           :before-upload="beforePdfFileUpload"
                           :on-success="handleFileCardSuccess"
                           multiple>
                    <i class="el-icon-upload"></i>
                    <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>
                    <div class="el-upload__tip" slot="tip">不超过30M</div>
                </el-upload>

                <el-upload class="upload-demo"
                           action="/drawingupload/Upload?path=hello"
                           :file-list="fileList3">
                    <el-button size="small" type="primary">点击上传</el-button>
                    <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>
                </el-upload>

            </el-form-item>
            <el-form-item label="上传模型" required="required">
                <el-upload class="upload-demo"
                           drag
                           :file-list="fileList"
                           action="/drawingupload/Upload"
                           :on-remove="handleFileRemove"
                           :before-upload="beforeFileUpload"
                           :on-success="handleFileCardSuccess"
                           multiple>
                    <i class="el-icon-upload"></i>
                    <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>
                    <div class="el-upload__tip" slot="tip">不超过30M</div>
                </el-upload>
            </el-form-item>

            <!--添加审批人-->
            <sam-approver-list :preset="preApprove" :nodelist="nodeList" :type="'approve'"
                               :nodeid="nodeInfo.NodeId">
            </sam-approver-list>
            <!--添加抄送人-->
            @*<sam-addapprover :preset="preCopy" :approvers="ruleForm.copyers">
        </sam-addapprover>*@
            <el-form-item>
                <el-button type="primary" v-on:click="onSubmit('ruleForm')" :disabled="disablePage">提交</el-button>
                <el-button v-on:click="resetForm('ruleForm')">重置</el-button>
            </el-form-item>
        </el-form>
</el-main>

<script>
    var FlowId = 6
    var upBom = []
    let isPdfFile = false
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                preApprove: false,
                preCopy: false,
                pdfList: [],
                fileList: [],
                imageList: [],
                mediaList: {},
                data: [],
                items: [],
                tableData: [],
                nodeInfo: {},
                nodeList: [],
                projestList: [],
                //图片上传参数
                dialogImageUrl: '',
                dialogVisible: false,
                //表单参数
                ruleForm: {
                    name: DingData.nickName,
                    remark: '',
                    ImageUrl: '',
                    OldImageUrl: '',
                    FileUrl: '',
                    OldFileUrl: '',
                    MediaId: '',
                    inputProjectName: '',
                    inputProjectId: '',
                    copyers: ['小唐', '季老师'],
                    ProjectName: '',
                    ProjectId: null,
                    Time: ''
                }
            }
        },
        methods: {
            //提交审批
            onSubmit(formName) {
                var that = this
                this.$refs[formName].validate((valid) => {
                    if (valid && this.data.length > 0) {
                        that.disablePage = true
                        var title
                        for (let p of that.projestList) {
                            if (p.ProjectId == that.ruleForm.ProjectId) {
                                title = p.ProjectName
                            }
                        }
                        var paramArr = []
                        paramArr.push({
                            "ApplyMan": DingData.nickName,
                            "ApplyManId": DingData.userid,
                            "NodeId": "0",
                            "ApplyTime": _getTime(),
                            "IsEnable": "1",
                            "FlowId": FlowId + '',
                            "Remark": that.ruleForm.remark,
                            "IsSend": false,
                            "State": "1",
                            "ImageUrl": that.ruleForm.ImageUrl,
                            "OldImageUrl": that.ruleForm.OldImageUrl,
                            "FileUrl": that.ruleForm.FileUrl,
                            "OldFileUrl": that.ruleForm.OldFileUrl,
                            "MediaId": that.ruleForm.MediaId,
                            "Title": title,
                            "ProjectId": that.ruleForm.ProjectId
                        }) 
                        for (let node of that.nodeList) {
                            if (node.NodeId == (that.nodeInfo.NodeId + 1)) {
                                console.log(node)
                                console.log(node.AddPeople)
                                if (!that.preApprove && node.AddPeople.length == 0) {
                                    this.$alert('您尚未选择审批人', '提交错误', {
                                        confirmButtonText: '确定',
                                        callback: action => {
                                            
                                        }
                                    });
                                    that.disablePage = false
                                    return 
                                }
                                for (let a of node.AddPeople) {
                                    paramArr.push({
                                        "ApplyMan": a.name,
                                        "ApplyManId": a.emplId,
                                        "IsEnable": 1,
                                        "FlowId": FlowId,
                                        "NodeId": node.NodeId,
                                        "IsSend": false,
                                        "State": 0,
                                        "ProjectId": that.ruleForm.ProjectId,
                                        "OldFileUrl": null,
                                        "IsBack": null
                                    })
                                }
                            }
                        }
                        $.ajax({
                            url: '/FlowInfo/CreateTaskInfo',
                            type: 'POST',
                            data: JSON.stringify(paramArr),
                            success: function (data) {
                                console.log("提交审批ok")
                                var taskId = JSON.parse(data).Content
                                console.log(paramArr)
                                console.log(taskId)
                                that.bindData(taskId)
                                //that.addApprover(taskId)
                                //that.bindApprover(taskId)
                                //寻人，提示已提交
                            }
                        })
                    } else {
                        that.$alert('表单数据不全或有误', '提交错误', {
                            confirmButtonText: '确定'
                        });
                        DingTalkPC.device.notification.alert({
                            message: '表单数据不全或有误',
                            title: '提示信息',
                            buttonName: '确定',
                            onSuccess: function () {
                            }
                        })
                        console.log('error submit!!');
                        return false;
                    }
                });
            },
            //审批绑定BOM表数据
            bindData(taskId) {
                for (let d of upBom) {
                    d.TaskId = taskId
                }
                var that = this
                $.ajax({
                    url: "/DrawingUpload/LoadPurchase",
                    type: "POST",
                    dataType: "json",
                    async: false,
                    data: JSON.stringify(upBom),
                    success: function (data) {
                        console.log("审批绑定BOM表数据ok")
                        console.log(upBom)
                        console.log(data)
                        that.doneSubmit()
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(XMLHttpRequest.status);
                    }
                })
            },
            //审批绑定审批人(自选)
            addApprover(taskId) {
                var that = this
                var peopleList = []
                for (let node of this.nodeList) {
                    if (node.NodeId == this.nodeInfo.NodeId) {
                        for (let a of node.AddPeople) {
                            peopleList.push({
                                OldTaskId: taskId,
                                FlowId: FlowId,
                                NodeId: NodeId,
                                ApplyMan: a.name,
                                ApplyManId: a.userid,
                                IsSend: "false",
                                IsEnable: "1",
                                State: "0"
                            })
                        }
                    }
                }
                if (peopleList.length == 0) return
                console.log("peopleList")
                console.log(peopleList)
                $.ajax({
                    url: "/FlowInfo/ChoseOrSend",
                    type: "POST",
                    async: false,
                    data: JSON.stringify(peopleList),
                    success: function (data) {
                        console.log("审批绑定自选审批人ok")
                        console.log(data)
                        that.doneSubmit()
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(XMLHttpRequest.status);
                    }
                })
            },
            //审批绑定审批人(默认)
            bindApprover(taskId) {
                var that = this
                var param = {
                    IsNext: 'true',
                    IsSend: 'False',
                    FlowId: FlowId,
                    NodeId: NodeId,
                    OldTaskId: taskId,
                    ApplyManId: DingData.userid
                }
                $.ajax({
                    url: "/FlowInfo/FindNextPeople" + _formatQueryStr(param),
                    type: "GET",
                    async: false,
                    success: function (data) {
                        console.log("审批绑定默认审批人ok")
                        console.log(param)
                        console.log(data)
                        console.log("/FlowInfo/FindNextPeople" + _formatQueryStr(param))
                        that.doneSubmit()
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(XMLHttpRequest.status);
                    }
                })
            },
            //上传文件方法
            handleSuccess(response, file, fileList) {
                console.log(response)
                var tableData = response[0].Value
                let BomId = ''
                if (!(tableData && tableData.length > 0)) return
                for (let i = 0; i < tableData.length; i++) {
                    let data = tableData[i]
                    if (i == 0) {
                        this.items = {}
                        for (let c in data) {
                            if (c.substring(0, 6) == 'Column') {
                                this.items[c] = data[c]
                            }
                            else if (c.length > 10) {
                                BomId = c
                            }
                        }
                    } else {
                        if (data['Column1'] && data['Column1'] != "") {
                            this.data.push(data)
                            upBom.push({
                                BomId: BomId,
                                DrawingNo: data.Column1,
                                Name: data.Column2,
                                Count: data.Column3,
                                MaterialScience: data.Column4,
                                Unit: data.Column5,
                                Brand: data.Column6,
                                Sorts: data.Column7,
                                Mark: data.Column8
                            })
                        }
                    }
                }
                console.log("upBom")
                console.log(upBom)
                this.totalRows = this.data.length
                this.getData()
            },
            handleExceed(files, fileList) {
                this.$message.warning(`当前限制选择 3 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);
            },
            beforeRemove(file, fileList) {
                return this.$confirm(`确定移除 ${file.name}？`);
            },
            handlePictureRemove(file, fileList) {
                this.changePictureList(fileList)
            },
            handleFileRemove(file, fileList) {
                this.changeFileList(fileList)
            },
            handlePictureCardSuccess(response, file, fileList) {
                this.changePictureList(fileList)
            },
            handleFileCardSuccess(response, file, fileList) {
                var that = this
                var paramObj = {
                    "": file.response.Content
                }
                $.ajax({
                    url: '/DingTalkServers/UploadMedia/',
                    type: 'POST',
                    data: JSON.stringify(paramObj),
                    success: function (data) {
                        data = JSON.parse(data)
                        console.log('上传文件到钉盘')
                        console.log('/api/dt/uploadMedia/')
                        console.log(paramObj)
                        if (data.media_id) {
                            console.log(data.media_id)
                            that.mediaList[file.response.Content] = data.media_id
                        } else {
                            console.log('无media_di')
                        }
                        isPdfFile ? that.pdfList = fileList : that.fileList = fileList
                    }
                })
            },
            changePictureList(fileList) {
                console.log(fileList)
                this.ruleForm.ImageUrl = ''
                this.ruleForm.OldImageUrl = ''
                for (var i = 0; i < fileList.length; i++) {
                    this.ruleForm.ImageUrl += fileList[i].response.Content
                    this.ruleForm.OldImageUrl += fileList[i].name
                    if (i == fileList.length - 1) break
                    this.ruleForm.ImageUrl += ','
                    this.ruleForm.OldImageUrl += ','
                }
            },
            changeFileList(fileList) {
                console.log(fileList)
                this.ruleForm.FileUrl = ''
                this.ruleForm.OldFileUrl = ''
                this.ruleForm.MediaId = ''
                for (var i = 0; i < fileList.length; i++) {
                    this.ruleForm.FileUrl += fileList[i].response.Content
                    this.ruleForm.OldFileUrl += fileList[i].name
                    this.ruleForm.MediaId += this.mediaList[fileList[i].response.Content]
                    if (i == fileList.length - 1) break
                    this.ruleForm.FileUrl += ','
                    this.ruleForm.OldFileUrl += ','
                    this.ruleForm.MediaId += ','
                }
            },
            beforePictureUpload(file) {
                console.log('before file')
                console.log(file)
                file.name = 'helloWorld'
                const isJPG = file.type === 'image/jpeg'
                const isPNG = file.type === 'image/png'
                const isLt2M = file.size / 1024 / 1024 < 2

                if (!(isJPG || isPNG)) {
                    this.$message.error('上传图片只能是 JPG 或 PNG 格式!')
                    return false
                }
                if (!isLt2M) {
                    this.$message.error('上传图片大小不能超过 2MB!')
                    return false
                }
                return true
            },
            beforePdfFileUpload(file) {
                console.log('before file')
                console.log(file)
                file.name = 'helloWorld'
                const isPdf = file.type === 'application/pdf'
                const isLt2M = file.size / 1024 / 1024 < 30
                if (!isPdf) {
                    this.$message.error('上传图片只能是 PDF 格式!')
                    return false
                }
                if (!isLt2M) {
                    this.$message.error('上传图片大小不能超过 30MB!')
                    return false
                }
                isPdfFile = true
                return true
            },
            beforeFileUpload(file) {
                console.log('before file')
                console.log(file)
                file.name = 'helloWorld'
                const isLt2M = file.size / 1024 / 1024 < 30
                if (!isLt2M) {
                    this.$message.error('上传图片大小不能超过 30MB!')
                    return false
                }
                isPdfFile = false
                return true
            },
            handlePictureCardPreview(file) {
                this.dialogImageUrl = file.url;
                this.dialogVisible = true;
            },
            
        },
        created: function () {
            this.getNodeInfo()
            this.getNodeList()
            loadHtml("mainPage", "partPage")
        }
    })

</script>

<style>
    .upload-demo{
        width:400px;
    }
</style>

