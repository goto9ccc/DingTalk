@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <div class="head-fixed" onclick="loadPage('/Main/Approval_list')">
        <i class="el-icon-arrow-left"></i>
        审批处理-{{nodeInfo.NodeName}}
    </div>
    <!--表格實體-->
    <el-table :data="tableData" stripe border>
        <el-table-column v-for="(value,key) in items" :prop="key" :label="value" :key="key">
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="5"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>

    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm"
             id="uploadForm" enctype="multipart/form-data">
        <el-form-item label="项目名">
            <el-input v-model="ruleForm.Title" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="申请人">
            <el-input v-model="ruleForm.ApplyMan" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="备注">
            <el-input v-model="ruleForm.Remark" :disabled="true"></el-input>
        </el-form-item>
        <!--图片展示-->
        <el-form-item label="相关图片">
            <el-upload action=""
                       list-type="picture-card"
                       :on-preview="handlePictureCardPreview"
                       :file-list="imageList"
                       :disabled="true">
            </el-upload>
        </el-form-item>
        <el-form-item label="相关文件">
            <el-card class="box-card">
                <div v-for="f in fileList" :key="f.name" class="text item" v-on:click="clickFile(f.url)">
                    {{ f.name }}
                </div>
            </el-card>

        </el-form-item>
        <!--添加审批人-->
        <sam-approver-list :preset="preApprove" :nodelist="nodeList" :type="'approve'"
                           :nodeid="nodeInfo.NodeId">
        </sam-approver-list>
        <!--添加抄送人-->
        @*<sam-addapprover :preset="preCopy" :approvers="copyers">
            </sam-addapprover>*@
        <template v-if="index==0">
            <el-form-item label="审批意见" prop="mark">
                <el-input v-model="ruleForm.mark"></el-input>
            </el-form-item>
            <el-form-item>
                <el-button type="primary" v-on:click="onSubmit" :disabled="disablePage">同意</el-button>
                <el-button v-if="isBack" type="warning" v-on:click="returnSubmit" :disabled="disablePage">退回</el-button>
                <el-button type="danger" :disabled="disablePage">不同意</el-button>
            </el-form-item>
        </template>
    </el-form>
    <div v-show="frameShow">
        <iframe :src="frameUrl"
                style="position:fixed;left:0;top:0;width:90%;height:100%;z-index:10086;"></iframe>
        <i class="el-icon-circle-close" v-on:click="hideFrame"
           style="position:fixed;right:10px;top:10px;z-index:10086;font-size:100px;"></i>
    </div>
    
</el-main>

<script>
    //初始化
    if (UrlObj.flowid) {
        FlowId = UrlObj.flowid
        NodeId = UrlObj.nodeid
        TaskId = UrlObj.taskid
        Id = UrlObj.id
        var Index = UrlObj.index
    }
    var allData = {}
    var imageList = []
    var fileList = []
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                preApprove: false,
                preCopy: false,
                imageList: imageList,
                fileList: fileList,
                data: [],
                items: {
                    DrawingNo: '代号',
                    Name: '名称',
                    Count: '数量',
                    MaterialScience: '材料',
                    Unit: '单位',
                    Brand: '品牌',
                    Sorts: '类别',
                    Mark: '备注'
                },
                tableData: [],
                totalRows: 0,
                nodeInfo: {},
                nodeList: [],
                copyers: ['小唐', '季老师'],
                ruleForm: {},
                isBack: false,
                index: Index,
                frameUrl: '',
                frameShow: false
            }
        },
        methods: {
            //提交审批
            onSubmit(formName) {
                this.disablePage = true
                var paramArr = []
                var that = this
                paramArr.push({
                    "Id": allData.Id,
                    "TaskId": TaskId,
                    "ApplyMan": DingData.nickName,
                    "ApplyManId": DingData.userid,
                    "NodeId": NodeId,
                    "ApplyTime": _getTime(),
                    "IsEnable": "1",
                    "FlowId": FlowId,
                    "Remark": this.ruleForm.mark,
                    "IsSend": "false",
                    "State": "1",
                    "Title": this.ruleForm.Title,
                    "ProjectId": this.ruleForm.ProjectId
                })
                for (let node of this.nodeList) {
                    if (node.NodeId == this.nodeInfo.NodeId) {
                        for (let a of node.AddPeople) {
                            paramArr.push({
                                "ApplyMan": a.name,
                                "ApplyManId": a.userid,
                                "TaskId": TaskId,
                                "ApplyTime": null,
                                "IsEnable": 1,
                                "FlowId": FlowId,
                                "NodeId": NodeId,
                                "Remark": null,
                                "IsSend": false,
                                "State": 0,
                                "ImageUrl": null,
                                "FileUrl": null,
                                "ProjectId": that.ruleForm.ProjectId,
                                "IsPost": false,
                                "OldImageUrl": null,
                                "OldFileUrl": null,
                                "IsBack": null
                            })
                        }
                    }
                }
                $.ajax({
                    url: "/FlowInfo/SubmitTaskInfo",
                    type: "POST",
                    data: JSON.stringify(paramArr),
                    dataType: "json",
                    success: function (data) {
                        console.log(paramArr)
                        console.log(data)
                        if (data && data.errorCode == 0) {
                            that.$alert('审批成功', '操作成功', {
                                confirmButtonText: '确定',
                                callback: action => {
                                    loadPage('/main/Approval')
                                }
                            });
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(XMLHttpRequest.status);
                    }
                })
            },
            //退回审批
            returnSubmit() {
                this.disablePage = true
                var param = {
                    "Id": allData.Id,
                    "TaskId": TaskId,
                    "ApplyMan": DingData.nickName,
                    "ApplyManId": DingData.userid,
                    "NodeId": NodeId,
                    "ApplyTime": _getTime(),
                    "IsEnable": "1",
                    "FlowId": FlowId,
                    "Remark": this.ruleForm.mark,
                    "IsSend": "false",
                    "State": "1",
                    "Title": this.ruleForm.Title,
                    "ProjectId": this.ruleForm.ProjectId,
                    "BackNodeId": this.nodeInfo.BackNodeId
                }
                $.ajax({
                    url: "/FlowInfo/FlowBack",
                    type: "POST",
                    data: JSON.stringify(param),
                    dataType: "json",
                    success: function (data) {
                        console.log('退回')
                        console.log(param)
                        console.log(data)
                        DingTalkPC.device.notification.alert({
                            message: '提交成功',
                            buttonName: '确定',
                            onSuccess: function () {
                                loadPage('/main/Approval')
                            }
                        })
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(XMLHttpRequest.status);
                    }
                })
            },

            //获取节点数据GetNodeInfo
            getNodeInfo() {
                var that = this
                $.ajax({
                    url: "/FlowInfo/GetNodeInfo?NodeId=" + NodeId + "&FlowId=" + FlowId,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        console.log("获取节点数据GetNodeInfo")
                        console.log(data)
                        if (!data) return
                        that.nodeInfo = data[0]
                        that.preApprove = (!data[0].IsNeedChose) || (Index>0)
                        that.preCopy = !data[0].IsSendChose
                        that.isBack = data[0].IsBack
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(XMLHttpRequest.status);
                    }
                })

            },
            //获取审批/抄送 相关人员列表GetFlowProgress
            getNodeList() {
                var that = this
                $.ajax({
                    url: "/FlowInfo/GetSign?FlowId=" + FlowId + "&TaskId=" + TaskId,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        for (let d of data[0]) {
                            if (d.ApplyMan)
                                d["NodePeople"] = d.ApplyMan.split(',')
                            if (d.NodeId == 0)
                                d["NodePeople"] = [d.ApplyMan]//["temp"]//[d.ApplyMan]
                            d['AddPeople'] = []
                        }
                        console.log("相关人员列表/FlowInfo/GetSign?FlowId=" + FlowId + "&TaskId=" + TaskId)
                        console.log(data)
                        that.nodeList = data[0]
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(XMLHttpRequest.status);
                    }
                })
            },
            //获取bom表信息
            getBomInfo() {
                var that = this
                $.ajax({
                    url: "/DrawingUpload/GetPurchase?TaskId=" + TaskId,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        console.log("获取bom表信息ok")
                        console.log(data)
                        that.data = data
                        that.getData()
                        that.totalRows = data.length
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(XMLHttpRequest.status);
                    }
                })
            },
            handlePictureCardPreview(file) {
                this.dialogImageUrl = file.url;
                this.dialogVisible = true;
            },
            //文件点击操作
            clickFile(fileUrl) {
                if (fileUrl.substring(fileUrl.length - 3) == 'pdf') {
                    this.frameUrl = fileUrl
                    this.frameShow = true
                }
                console.log(fileUrl)
            },
            hideFrame() {
                this.frameShow = false
            }
        },
        created: function () {
            loadHtml("mainPage", "partPage")
        }
    })
    getFormData()
    

    //获取审批表单信息
    function getFormData() {
        $.ajax({
            url: "/FlowInfo/GetApproveInfo?TaskId=" + TaskId + "&ApplyManId=" + DingData.userid,
            type: "GET",
            dataType: "json",
            success: function (data) {
                console.log("获取审批表单信息ok")
                console.log("/FlowInfo/GetApproveInfo?TaskId=" + TaskId + "&ApplyManId=" + DingData.userid)
                console.log(data)
                allData = data
                if (data.ImageUrl && data.ImageUrl.length > 5) {
                    var tempList = data.ImageUrl.split(',')
                    for (let img of tempList) {
                        imageList.push({
                            name: 'hello.jpg',
                            url: document.location + (img.substring(2)).replace(/\\/g, "/")
                        })
                    }
                }
                if (data.FileUrl && data.FileUrl.length > 5) {
                    var urlList = data.FileUrl.split(',')
                    var oldUrlList = data.OldFileUrl.split(',')
                    for (var i = 0; i < urlList.length; i++) {
                        fileList.push({
                            name: oldUrlList[i],
                            url: document.location + (urlList[i].substring(2)).replace(/\\/g, "/")
                        })
                    }
                }
                console.log(imageList)
                console.log(fileList)
                demo.ruleForm = allData
                demo.getNodeInfo()
                demo.getNodeList()
                demo.getBomInfo()
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log(XMLHttpRequest.status);
            }
        })
    }

</script>



